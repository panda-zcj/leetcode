/**
 * 
 * Copyright (c) 2019 南京航空航天大学 航空通信网络研究室
 * 
 * @file     d:\code\c_source_code\leetcode\17.cpp
 * @author   詹长建 (2233930937@qq.com)
 * @date     2019-01
 * @brief    
 * @version  0.0.1
 * 
 * Last Modified:  2019-01-21
 * Modified By:    詹长建 (2233930937@qq.com)
 * 
 */


/*
给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。

给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。



示例:

输入："23"
输出：["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"]
*/

#include <iostream>
#include <algorithm>
#include <vector>
#include <hash_map>
#include <map>
#include <string>
#include <cmath>
using namespace std;
class Solution {
public:
    string keyboard[10];
    vector<int> charInteger;
    vector<string> letterCombinations(string digits) {
        int len=digits.size();
        if(!len){
            return vector<string>();
        }
        keyboard[2]="abc";
        keyboard[3]="def";
        keyboard[4]="ghi";
        keyboard[5]="jkl";
        keyboard[6]="mno";
        keyboard[7]="pqrs";
        keyboard[8]="tuv";
        keyboard[9]="wxyz";
        int condition=1;
        for(int i=0;i<len;i++){
            charInteger.push_back(digits.at(i)-'0');
            condition*=keyboard[charInteger.at(i)].size();
        }
        vector<string> str(condition); 
        int max=condition;
        string tmp;
        tmp.clear();
        for(int m=len;m>0;m--){
            int nums=keyboard[charInteger.at(m)].size();
            max/=nums;
            for(int n=0;n<nums;n++){
                for(){
                    tmp=str.at()
                }
            }
        }
        return str;
    }
};
